/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  EIP712Proxy,
  EIP712ProxyInterface,
} from "../../../../contracts/eip712/proxy/EIP712Proxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEAS",
        name: "eas",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "DeadlineExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEAS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedProxyAttestationRequest",
        name: "delegatedRequest",
        type: "tuple",
      },
    ],
    name: "attestByDelegation",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttestTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "getAttester",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEAS",
    outputs: [
      {
        internalType: "contract IEAS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevokeTypeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "recipient",
                type: "address",
              },
              {
                internalType: "uint64",
                name: "expirationTime",
                type: "uint64",
              },
              {
                internalType: "bool",
                name: "revocable",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "refUID",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct AttestationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "attester",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct MultiDelegatedProxyAttestationRequest[]",
        name: "multiDelegatedRequests",
        type: "tuple[]",
      },
    ],
    name: "multiAttestByDelegation",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData[]",
            name: "data",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature[]",
            name: "signatures",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "revoker",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct MultiDelegatedProxyRevocationRequest[]",
        name: "multiDelegatedRequests",
        type: "tuple[]",
      },
    ],
    name: "multiRevokeByDelegation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "schema",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "uid",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RevocationRequestData",
            name: "data",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "v",
                type: "uint8",
              },
              {
                internalType: "bytes32",
                name: "r",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "s",
                type: "bytes32",
              },
            ],
            internalType: "struct Signature",
            name: "signature",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "revoker",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "deadline",
            type: "uint64",
          },
        ],
        internalType: "struct DelegatedProxyRevocationRequest",
        name: "delegatedRequest",
        type: "tuple",
      },
    ],
    name: "revokeByDelegation",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101e060405234801561001157600080fd5b50604051612d14380380612d1483398101604081905261003091610211565b6040805180820190915260058152640312e332e360dc1b60208201526001608052600360a052600060c081905282919061006b90839061015d565b6101805261007a81600161015d565b6101a05281516020808401919091206101405281519082012061016052466101005261010a6101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e052505030610120526001600160a01b03821661013b576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0382166101c0526002610155828261036e565b505050610483565b60006020835110156101795761017283610190565b905061018a565b81610184848261036e565b5060ff90505b92915050565b600080829050601f815111156101c4578260405163305a27a960e01b81526004016101bb919061042c565b60405180910390fd5b80516101cf8261045f565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102085781810151838201526020016101f0565b50506000910152565b6000806040838503121561022457600080fd5b82516001600160a01b038116811461023b57600080fd5b60208401519092506001600160401b0381111561025757600080fd5b8301601f8101851361026857600080fd5b80516001600160401b03811115610281576102816101d7565b604051601f8201601f19908116603f011681016001600160401b03811182821017156102af576102af6101d7565b6040528181528282016020018710156102c757600080fd5b6102d88260208301602086016101ed565b8093505050509250929050565b600181811c908216806102f957607f821691505b60208210810361031957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561036957806000526020600020601f840160051c810160208510156103465750805b601f840160051c820191505b818110156103665760008155600101610352565b50505b505050565b81516001600160401b03811115610387576103876101d7565b61039b8161039584546102e5565b8461031f565b6020601f8211600181146103cf57600083156103b75750848201515b600019600385901b1c1916600184901b178455610366565b600084815260208120601f198516915b828110156103ff57878501518255602094850194600190920191016103df565b508482101561041d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015261044b8160408501602087016101ed565b601f01601f19169190910160400192915050565b805160208083015191908110156103195760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516127ef610525600039600081816101e4015281816104d1015281816105e901528181610a5b0152610c3c01526000611262015260006112350152600061136f01526000611347015260006112a2015260006112cc015260006112f6015260006107760152600061074d0152600061072401526127ef6000f3fe6080604052600436106100c75760003560e01c806365c40b9c11610074578063a6d4dbc71161004e578063a6d4dbc714610250578063b83010d314610263578063ed24911d1461029657600080fd5b806365c40b9c146101d557806384b0196e14610208578063954115251461023057600080fd5b806317d7de7c116100a557806317d7de7c1461018b5780633c042715146101ad57806354fd4d50146101c057600080fd5b80630eabf660146100cc57806310d736d5146100e157806312b11a171461014e575b600080fd5b6100df6100da3660046119a4565b6102ab565b005b3480156100ed57600080fd5b506101246100fc3660046119e6565b60009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561015a57600080fd5b507fea02ffba7dcb45f6fc649714d23f315eef12e3b27f9a7735d8d8bf41eb2b1af15b604051908152602001610145565b34801561019757600080fd5b506101a0610540565b6040516101459190611a6d565b61017d6101bb366004611a87565b6105d2565b3480156101cc57600080fd5b506101a061071d565b3480156101e157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610124565b34801561021457600080fd5b5061021d6107c0565b6040516101459796959493929190611ac2565b61024361023e3660046119a4565b610822565b6040516101459190611b83565b6100df61025e366004611bc6565b610c23565b34801561026f57600080fd5b507f78a69a78c1a55cdff5cbf949580b410778cd9e4d1ecbe6f06a7fa8dc2441b57d61017d565b3480156102a257600080fd5b5061017d610d23565b8060008167ffffffffffffffff8111156102c7576102c7611be2565b60405190808252806020026020018201604052801561030d57816020015b6040805180820190915260008152606060208201528152602001906001900390816102e55790505b50905060005b8281101561049357600085858381811061032f5761032f611c11565b90506020028101906103419190611c40565b61034a90611ead565b602081015180519192509080158061036757508260400151518114155b1561039e576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156104485760008382815181106103bd576103bd611c11565b6020026020010151905061043f6040518060a0016040528087600001518152602001838152602001876040015185815181106103fb576103fb611c11565b60200260200101518152602001876060015173ffffffffffffffffffffffffffffffffffffffff168152602001876080015167ffffffffffffffff16815250610d32565b506001016103a1565b506040518060400160405280846000015181526020018381525085858151811061047457610474611c11565b602002602001018190525050505061048c8160010190565b9050610313565b506040517f4cb7e9e500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690634cb7e9e5903490610508908590600401611fae565b6000604051808303818588803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050505050505050565b60606002805461054f90612085565b80601f016020809104026020016040519081016040528092919081815260200182805461057b90612085565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905090565b60006105e56105e0836121fe565b610f8e565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f17325e7346040518060400160405280876000013581526020018780602001906106499190612277565b610652906122ab565b8152506040518363ffffffff1660e01b8152600401610671919061232a565b60206040518083038185885af115801561068f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106b49190612357565b90506106c660c0840160a08501612370565b600082815260036020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905592915050565b60606107487f0000000000000000000000000000000000000000000000000000000000000000611170565b6107717f0000000000000000000000000000000000000000000000000000000000000000611170565b61079a7f0000000000000000000000000000000000000000000000000000000000000000611170565b6040516020016107ac9392919061238b565b604051602081830303815290604052905090565b6000606080600080600060606107d461122e565b6107dc61125b565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60608160008167ffffffffffffffff81111561084057610840611be2565b60405190808252806020026020018201604052801561088657816020015b60408051808201909152600081526060602082015281526020019060019003908161085e5790505b50905060005b82811015610a5657368686838181106108a7576108a7611c11565b90506020028101906108b99190611c40565b90503660006108cb6020840184612422565b9092509050808015806108ec57506108e6604085018561248a565b90508114155b15610923576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610a04576109fc6040518060a001604052808760000135815260200186868581811061095857610958611c11565b905060200281019061096a9190612277565b610973906122ab565b8152602001610985604089018961248a565b8581811061099557610995611c11565b9050606002018036038101906109ab91906124f1565b81526020016109c06080890160608a01612370565b73ffffffffffffffffffffffffffffffffffffffff1681526020016109eb60a0890160808a0161250d565b67ffffffffffffffff169052610f8e565b600101610926565b50604080518082019091528435815260208101610a218486612528565b815250868681518110610a3657610a36611c11565b602002602001018190525050505050610a4f8160010190565b905061088c565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166344adc90e34846040518363ffffffff1660e01b8152600401610ab3919061258e565b60006040518083038185885af1158015610ad1573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b189190810190612681565b90506000805b84811015610c155736888883818110610b3957610b39611c11565b9050602002810190610b4b9190611c40565b9050366000610b5d6020840184612422565b90925090508060005b81811015610bff57610b7e6080860160608701612370565b600360008a8a81518110610b9457610b94611c11565b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550866001019650610bf88160010190565b9050610b66565b5050505050610c0e8160010190565b9050610b1e565b509093505050505b92915050565b610c3a610c3536839003830183612717565b610d32565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663469262673460405180604001604052808560000135815260200185602001803603810190610ca09190612785565b90526040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815281516004820152602091820151805160248301529091015160448201526064016000604051808303818588803b158015610d0757600080fd5b505af1158015610d1b573d6000803e3d6000fd5b505050505050565b6000610d2d611288565b905090565b608081015167ffffffffffffffff1615801590610d6657504267ffffffffffffffff16816080015167ffffffffffffffff16105b15610d9d576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208082015180516000908152600390925260409091205473ffffffffffffffffffffffffffffffffffffffff1680610e02576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81163314610e51576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040830151610e5f816113c0565b606080850151855185516020808801516080808b0151604080517f78a69a78c1a55cdff5cbf949580b410778cd9e4d1ecbe6f06a7fa8dc2441b57d9581019590955273ffffffffffffffffffffffffffffffffffffffff90971696840196909652958201939093529384015260a083015267ffffffffffffffff1660c0820152600090610f059060e0015b604051602081830303815290604052805190602001206114ce565b9050846060015173ffffffffffffffffffffffffffffffffffffffff16610f3a82846000015185602001518660400151611516565b73ffffffffffffffffffffffffffffffffffffffff1614610f87576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b608081015167ffffffffffffffff1615801590610fc257504267ffffffffffffffff16816080015167ffffffffffffffff16105b15610ff9576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020810151604082015161100c816113c0565b60006110e87fea02ffba7dcb45f6fc649714d23f315eef12e3b27f9a7735d8d8bf41eb2b1af160001b8560600151866000015186600001518760200151886040015189606001518a60800151805190602001208b60a001518d60800151604051602001610eea9a99989796959493929190998a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015260408a019790975294909616606088015267ffffffffffffffff928316608088015290151560a087015260c086015260e0850193909352610100840152166101208201526101400190565b9050836060015173ffffffffffffffffffffffffffffffffffffffff1661111d82846000015185602001518660400151611516565b73ffffffffffffffffffffffffffffffffffffffff161461116a576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6060600061117d83611544565b600101905060008167ffffffffffffffff81111561119d5761119d611be2565b6040519080825280601f01601f1916602001820160405280156111c7576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846111d157509392505050565b6060610d2d7f00000000000000000000000000000000000000000000000000000000000000006000611626565b6060610d2d7f00000000000000000000000000000000000000000000000000000000000000006001611626565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156112ee57507f000000000000000000000000000000000000000000000000000000000000000046145b1561131857507f000000000000000000000000000000000000000000000000000000000000000090565b610d2d604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b8051602080830151604080850151905160f89490941b7fff00000000000000000000000000000000000000000000000000000000000000169284019290925260218301526041820152600090606101604051602081830303815290604052905060048160405161143091906127a1565b9081526040519081900360200190205460ff161561147a576040517fcce9a82400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160048260405161148c91906127a1565b90815260405190819003602001902080549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009092169190911790555050565b6000610c1d6114db611288565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b600080600080611528888888886116d1565b92509250925061153882826117cb565b50909695505050505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061158d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106115b9576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115d757662386f26fc10000830492506010015b6305f5e10083106115ef576305f5e100830492506008015b612710831061160357612710830492506004015b60648310611615576064830492506002015b600a8310610c1d5760010192915050565b606060ff831461164057611639836118d8565b9050610c1d565b81805461164c90612085565b80601f016020809104026020016040519081016040528092919081815260200182805461167890612085565b80156116c55780601f1061169a576101008083540402835291602001916116c5565b820191906000526020600020905b8154815290600101906020018083116116a857829003601f168201915b50505050509050610c1d565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561170c57506000915060039050826117c1565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611760573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117b7575060009250600191508290506117c1565b9250600091508190505b9450945094915050565b60008260038111156117df576117df6127b3565b036117e8575050565b60018260038111156117fc576117fc6127b3565b03611833576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611847576118476127b3565b03611886576040517ffce698f7000000000000000000000000000000000000000000000000000000008152600481018290526024015b60405180910390fd5b600382600381111561189a5761189a6127b3565b036118d4576040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004810182905260240161187d565b5050565b606060006118e583611917565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f811115610c1d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f84011261196a57600080fd5b50813567ffffffffffffffff81111561198257600080fd5b6020830191508360208260051b850101111561199d57600080fd5b9250929050565b600080602083850312156119b757600080fd5b823567ffffffffffffffff8111156119ce57600080fd5b6119da85828601611958565b90969095509350505050565b6000602082840312156119f857600080fd5b5035919050565b60005b83811015611a1a578181015183820152602001611a02565b50506000910152565b60008151808452611a3b8160208601602086016119ff565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611a806020830184611a23565b9392505050565b600060208284031215611a9957600080fd5b813567ffffffffffffffff811115611ab057600080fd5b820160e08185031215611a8057600080fd5b7fff000000000000000000000000000000000000000000000000000000000000008816815260e060208201526000611afd60e0830189611a23565b8281036040840152611b0f8189611a23565b6060840188905273ffffffffffffffffffffffffffffffffffffffff8716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611b72578351835260209384019390920191600101611b54565b50909b9a5050505050505050505050565b602080825282518282018190526000918401906040840190835b81811015611bbb578351835260209384019390920191600101611b9d565b509095945050505050565b6000610100828403128015611bda57600080fd5b509092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112611c7457600080fd5b9190910192915050565b60405160a0810167ffffffffffffffff81118282101715611ca157611ca1611be2565b60405290565b60405160c0810167ffffffffffffffff81118282101715611ca157611ca1611be2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d1157611d11611be2565b604052919050565b600067ffffffffffffffff821115611d3357611d33611be2565b5060051b60200190565b600060408284031215611d4f57600080fd5b6040805190810167ffffffffffffffff81118282101715611d7257611d72611be2565b604052823581526020928301359281019290925250919050565b600060608284031215611d9e57600080fd5b6040516060810167ffffffffffffffff81118282101715611dc157611dc1611be2565b604052905080823560ff81168114611dd857600080fd5b815260208381013590820152604092830135920191909152919050565b600082601f830112611e0657600080fd5b8135611e19611e1482611d19565b611cca565b80828252602082019150602060608402860101925085831115611e3b57600080fd5b602085015b83811015611e6257611e528782611d8c565b8352602090920191606001611e40565b5095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611e9057600080fd5b919050565b803567ffffffffffffffff81168114611e9057600080fd5b600060a08236031215611ebf57600080fd5b611ec7611c7e565b82358152602083013567ffffffffffffffff811115611ee557600080fd5b830136601f820112611ef657600080fd5b8035611f04611e1482611d19565b8082825260208201915060208360061b850101925036831115611f2657600080fd5b6020840193505b82841015611f5257611f3f3685611d3d565b8252602082019150604084019350611f2d565b6020850152505050604083013567ffffffffffffffff811115611f7457600080fd5b611f8036828601611df5565b604083015250611f9260608401611e6c565b6060820152611fa360808401611e95565b608082015292915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015612079578685037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00184528151805186526020908101516040828801819052815190880181905291019060009060608801905b808310156120615761204a82855180518252602090810151910152565b60408201915060208401935060018301925061202d565b50965050506020938401939190910190600101611fd6565b50929695505050505050565b600181811c9082168061209957607f821691505b6020821081036120d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082601f8301126120e957600080fd5b813567ffffffffffffffff81111561210357612103611be2565b61213460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611cca565b81815284602083860101111561214957600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561217857600080fd5b612180611ca7565b905061218b82611e6c565b815261219960208301611e95565b6020820152604082013580151581146121b157600080fd5b604082015260608281013590820152608082013567ffffffffffffffff8111156121da57600080fd5b6121e6848285016120d8565b60808301525060a09182013591810191909152919050565b600060e0823603121561221057600080fd5b612218611c7e565b82358152602083013567ffffffffffffffff81111561223657600080fd5b61224236828601612166565b6020830152506122553660408501611d8c565b604082015261226660a08401611e6c565b6060820152611fa360c08401611e95565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112611c7457600080fd5b6000610c1d3683612166565b73ffffffffffffffffffffffffffffffffffffffff815116825267ffffffffffffffff6020820151166020830152604081015115156040830152606081015160608301526000608082015160c0608085015261231660c0850182611a23565b60a093840151949093019390935250919050565b60208152815160208201526000602083015160408084015261234f60608401826122b7565b949350505050565b60006020828403121561236957600080fd5b5051919050565b60006020828403121561238257600080fd5b611a8082611e6c565b6000845161239d8184602089016119ff565b7f2e0000000000000000000000000000000000000000000000000000000000000090830190815284516123d78160018401602089016119ff565b7f2e000000000000000000000000000000000000000000000000000000000000006001929091019182015283516124158160028401602088016119ff565b0160020195945050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261245757600080fd5b83018035915067ffffffffffffffff82111561247257600080fd5b6020019150600581901b360382131561199d57600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126124bf57600080fd5b83018035915067ffffffffffffffff8211156124da57600080fd5b602001915060608102360382131561199d57600080fd5b60006060828403121561250357600080fd5b611a808383611d8c565b60006020828403121561251f57600080fd5b611a8082611e95565b6000612536611e1484611d19565b8381526020810190600585901b84013681111561255257600080fd5b845b81811015611bbb57803567ffffffffffffffff81111561257357600080fd5b61257f36828901612166565b85525060209384019301612554565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015612079577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0878603018452815180518652602090810151604082880181905281519088018190529101906060600582901b88018101919088019060005b81811015612667577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a85030183526126518486516122b7565b6020958601959094509290920191600101612617565b5091975050506020948501949290920191506001016125b6565b60006020828403121561269357600080fd5b815167ffffffffffffffff8111156126aa57600080fd5b8201601f810184136126bb57600080fd5b80516126c9611e1482611d19565b8082825260208201915060208360051b8501019250868311156126eb57600080fd5b6020840193505b8284101561270d5783518252602093840193909101906126f2565b9695505050505050565b600061010082840312801561272b57600080fd5b50612734611c7e565b823581526127458460208501611d3d565b60208201526127578460608501611d8c565b604082015261276860c08401611e6c565b606082015261277960e08401611e95565b60808201529392505050565b60006040828403121561279757600080fd5b611a808383611d3d565b60008251611c748184602087016119ff565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c634300081a000a";

type EIP712ProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712ProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Proxy__factory extends ContractFactory {
  constructor(...args: EIP712ProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    eas: AddressLike,
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(eas, name, overrides || {});
  }
  override deploy(
    eas: AddressLike,
    name: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(eas, name, overrides || {}) as Promise<
      EIP712Proxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EIP712Proxy__factory {
    return super.connect(runner) as EIP712Proxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712ProxyInterface {
    return new Interface(_abi) as EIP712ProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EIP712Proxy {
    return new Contract(address, _abi, runner) as unknown as EIP712Proxy;
  }
}
